apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/redhat-appstudio/o11y?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch == "main"
    pipelinesascode.tekton.dev/task: '[.tekton/kube-linter-oci-ta.yaml]'
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: o11y
    appstudio.openshift.io/component: o11y
    pipelines.appstudio.openshift.io/type: build
  name: o11y-on-pull-request
  namespace: rhtap-o11y-tenant
spec:
  params:
  - name: dockerfile
    value: Dockerfile
  - name: git-url
    value: '{{repo_url}}'
  - name: image-expires-after
    value: 5d
  - name: output-image
    value: quay.io/redhat-user-workloads/rhtap-o11y-tenant/o11y/o11y:on-pr-{{revision}}
  - name: path-context
    value: .
  - name: revision
    value: '{{revision}}'
  - name: target-branch
    value: '{{target_branch}}'
  pipelineSpec:
    finally:
    - name: show-sbom
      params:
      - name: IMAGE_URL
        value: $(tasks.build-container.results.IMAGE_URL)
      taskRef:
        params:
        - name: name
          value: show-sbom
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-show-sbom:0.1@sha256:beb0616db051952b4b861dd8c3e00fa1c0eccbd926feddf71194d3bb3ace9ce7
        - name: kind
          value: task
        resolver: bundles
    - name: show-summary
      params:
      - name: pipelinerun-name
        value: $(context.pipelineRun.name)
      - name: git-url
        value: $(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)
      - name: image-url
        value: $(params.output-image)
      - name: build-task-status
        value: $(tasks.build-container.status)
      taskRef:
        params:
        - name: name
          value: summary
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-summary:0.2@sha256:3f6e8513cbd70f0416eb6c6f2766973a754778526125ff33d8e3633def917091
        - name: kind
          value: task
        resolver: bundles
    params:
    - description: Source Repository URL
      name: git-url
      type: string
    - default: ""
      description: Revision of the Source Repository
      name: revision
      type: string
    - default: ""
      name: target-branch
      type: string
    - description: Fully Qualified Output Image
      name: output-image
      type: string
    - default: .
      description: Path to the source code of an application's component from where to build image.
      name: path-context
      type: string
    - default: Dockerfile
      description: Path to the Dockerfile inside the context specified by parameter path-context
      name: dockerfile
      type: string
    - default: "false"
      description: Force rebuild image
      name: rebuild
      type: string
    - default: "false"
      description: Skip checks against built image
      name: skip-checks
      type: string
    - default: "true"
      description: Skip optional checks, set false if you want to run optional checks
      name: skip-optional
      type: string
    - default: "false"
      description: Execute the build with network isolation
      name: hermetic
      type: string
    - default: ""
      description: Build dependencies to be prefetched by Cachi2
      name: prefetch-input
      type: string
    - default: "false"
      description: Java build
      name: java
      type: string
    - default: ""
      description: Image tag expiration time, time values could be something like 1h, 2d, 3w for hours, days, and weeks, respectively.
      name: image-expires-after
    - default: "true"
      description: Build a source image.
      name: build-source-image
      type: string
    - default: "true"
      description: Enable dev-package-managers in prefetch task
      name: prefetch-dev-package-managers-enabled
      type: string
    results:
    - description: ""
      name: IMAGE_URL
      value: $(tasks.build-container.results.IMAGE_URL)
    - description: ""
      name: IMAGE_DIGEST
      value: $(tasks.build-container.results.IMAGE_DIGEST)
    - description: ""
      name: CHAINS-GIT_URL
      value: $(tasks.clone-repository.results.url)
    - description: ""
      name: CHAINS-GIT_COMMIT
      value: $(tasks.clone-repository.results.commit)
    tasks:
    - name: rpms-signature-scan
      params:
      - name: image-url
        value: $(tasks.build-container.results.IMAGE_URL)
      - name: image-digest
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      - name: fail-unsigned
        value: "true"
      taskRef:
        params:
        - name: name
          value: rpms-signature-scan
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan:0.2@sha256:1b6c20ab3dbfb0972803d3ebcb2fa72642e59400c77bd66dfd82028bdd09e120
        - name: kind
          value: task
        resolver: bundles
    - name: init
      params:
      - name: image-url
        value: $(params.output-image)
      - name: rebuild
        value: $(params.rebuild)
      - name: skip-checks
        value: $(params.skip-checks)
      - name: skip-optional
        value: $(params.skip-optional)
      - name: pipelinerun-name
        value: $(context.pipelineRun.name)
      - name: pipelinerun-uid
        value: $(context.pipelineRun.uid)
      taskRef:
        params:
        - name: name
          value: init
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:ded314206f09712b2116deb050b774ae7efef9ab243794334c8e616871a3ffa5
        - name: kind
          value: task
        resolver: bundles
    - name: clone-repository
      params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.revision)
      - name: ociStorage
        value: $(params.output-image).git
      - name: ociArtifactExpiresAfter
        value: $(params.image-expires-after)
      runAfter:
      - init
      taskRef:
        params:
        - name: name
          value: git-clone-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta:0.1@sha256:4a601aeec58a1dd89c271e728fd8f0d84777825b46940c3aec27f15bab3edacf
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      workspaces:
      - name: basic-auth
        workspace: git-auth
    - name: prefetch-dependencies
      params:
      - name: input
        value: $(params.prefetch-input)
      - name: hermetic
        value: $(params.hermetic)
      - name: dev-package-managers
        value: $(params.prefetch-dev-package-managers-enabled)
      - name: SOURCE_ARTIFACT
        value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
      - name: ociStorage
        value: $(params.output-image).prefetch
      - name: ociArtifactExpiresAfter
        value: $(params.image-expires-after)
      runAfter:
      - clone-repository
      taskRef:
        params:
        - name: name
          value: prefetch-dependencies-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta:0.2@sha256:29869c64ff27e964e26a8a7ea2c882a2ed5424210bd0603be45a07e2ebf308cc
        - name: kind
          value: task
        resolver: bundles
    - name: check-and-test-prometheus-rules
      params:
      - name: SOURCE_ARTIFACT
        value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
      runAfter:
      - clone-repository
      taskSpec:
        metadata: {}
        params:
        - description: The Trusted Artifact URI pointing to the artifact with the application source code.
          name: SOURCE_ARTIFACT
          type: string
        spec: null
        stepTemplate:
          computeResources: {}
          volumeMounts:
          - mountPath: /var/workdir
            name: workdir
        steps:
        - args:
          - use
          - $(params.SOURCE_ARTIFACT)=/var/workdir/source
          computeResources: {}
          image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:9b180776a41d9a22a1c51539f1647c60defbbd55b44bbebdd4130e33512d8b0d
          name: use-trusted-artifact
        - computeResources: {}
          image: quay.io/rhobs/obsctl-reloader-rules-checker:1.0.7
          name: check-and-test-all
          script: |
            yum install -y make && \
            CMD=obsctl-reloader-rules-checker make check-and-test
          workingDir: /var/workdir/source
        volumes:
        - emptyDir: {}
          name: workdir
    - name: yaml-lint
      params:
      - name: SOURCE_ARTIFACT
        value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
      runAfter:
      - clone-repository
      taskSpec:
        metadata: {}
        params:
        - description: The Trusted Artifact URI pointing to the artifact with the application source code.
          name: SOURCE_ARTIFACT
          type: string
        spec: null
        stepTemplate:
          computeResources: {}
          volumeMounts:
          - mountPath: /var/workdir
            name: workdir
        steps:
        - args:
          - use
          - $(params.SOURCE_ARTIFACT)=/var/workdir/source
          computeResources: {}
          image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:9b180776a41d9a22a1c51539f1647c60defbbd55b44bbebdd4130e33512d8b0d
          name: use-trusted-artifact
        - computeResources: {}
          image: registry.access.redhat.com/ubi9/python-39:latest
          name: yaml-lint
          script: make install_pipenv sync_pipenv lint_yamls
          workingDir: /var/workdir/source
        volumes:
        - emptyDir: {}
          name: workdir
    - name: run-kubelint
      params:
      - name: SOURCE_ARTIFACT
        value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
      - name: config_file_path
        value: .kube-linter.yaml
      runAfter:
      - clone-repository
      taskRef:
        name: kube-linter-oci-ta
    - name: run-go-unit-tests
      params:
      - name: SOURCE_ARTIFACT
        value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
      runAfter:
      - clone-repository
      taskSpec:
        metadata: {}
        params:
        - description: The Trusted Artifact URI pointing to the artifact with the application source code.
          name: SOURCE_ARTIFACT
          type: string
        spec: null
        stepTemplate:
          computeResources: {}
          securityContext:
            runAsUser: 0
          volumeMounts:
          - mountPath: /var/workdir
            name: workdir
        steps:
        - args:
          - use
          - $(params.SOURCE_ARTIFACT)=/var/workdir/source
          computeResources: {}
          image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:9b180776a41d9a22a1c51539f1647c60defbbd55b44bbebdd4130e33512d8b0d
          name: use-trusted-artifact
        - computeResources: {}
          image: registry.access.redhat.com/ubi9/go-toolset:1.24.6-1755755147
          name: go-unit-tests
          script: |
            go get -v -t -d ./...
            go test -v ./...
          workingDir: /var/workdir/source
        volumes:
        - emptyDir: {}
          name: workdir
    - name: test-kustomize-build
      params:
      - name: SOURCE_ARTIFACT
        value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
      runAfter:
      - clone-repository
      taskSpec:
        metadata: {}
        params:
        - description: The Trusted Artifact URI pointing to the artifact with the application source code.
          name: SOURCE_ARTIFACT
          type: string
        spec: null
        stepTemplate:
          computeResources: {}
          volumeMounts:
          - mountPath: /var/workdir
            name: workdir
        steps:
        - args:
          - use
          - $(params.SOURCE_ARTIFACT)=/var/workdir/source
          computeResources: {}
          image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:9b180776a41d9a22a1c51539f1647c60defbbd55b44bbebdd4130e33512d8b0d
          name: use-trusted-artifact
        - computeResources: {}
          image: registry.access.redhat.com/ubi8/ubi:latest
          name: kustomize-build
          script: yum install -y make && make kustomize-build
          workingDir: /var/workdir/source
        volumes:
        - emptyDir: {}
          name: workdir
    - name: build-container
      params:
      - name: IMAGE
        value: $(params.output-image)
      - name: DOCKERFILE
        value: $(params.dockerfile)
      - name: CONTEXT
        value: $(params.path-context)
      - name: HERMETIC
        value: $(params.hermetic)
      - name: PREFETCH_INPUT
        value: $(params.prefetch-input)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      - name: SOURCE_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
      - name: CACHI2_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)
      runAfter:
      - prefetch-dependencies
      taskRef:
        params:
        - name: name
          value: buildah-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-buildah-oci-ta:0.4@sha256:5194b17407c4951fb9169c00e4c8c54d01dba4bac01c48441220a4fbc6eb898e
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
    - name: build-source-image
      params:
      - name: BINARY_IMAGE
        value: $(tasks.build-container.results.IMAGE_URL)
      - name: SOURCE_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
      - name: CACHI2_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)
      - name: BINARY_IMAGE_DIGEST
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      runAfter:
      - build-container
      taskRef:
        params:
        - name: name
          value: source-build-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-source-build-oci-ta:0.3@sha256:f1c0743939fe246b19e9e268a3b96b22b724096dcf946548c3d60e184136e32f
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      - input: $(params.build-source-image)
        operator: in
        values:
        - "true"
    - name: deprecated-base-image-check
      params:
      - name: IMAGE_URL
        value: $(tasks.build-container.results.IMAGE_URL)
      - name: IMAGE_DIGEST
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      runAfter:
      - build-container
      taskRef:
        params:
        - name: name
          value: deprecated-image-check
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check:0.5@sha256:c49732039f105de809840be396f83ead8c46f6a6948e1335b76d37e9eb469574
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: clair-scan
      params:
      - name: image-digest
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-container.results.IMAGE_URL)
      runAfter:
      - build-container
      taskRef:
        params:
        - name: name
          value: clair-scan
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-clair-scan:0.2@sha256:076d5cde62b55bbfcdda2b4782392256bbda5ad38f839013b4330b3aba70a973
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: sast-snyk-check
      params:
      - name: SOURCE_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
      - name: image-digest
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-container.results.IMAGE_URL)
      runAfter:
      - prefetch-dependencies
      taskRef:
        params:
        - name: name
          value: sast-snyk-check-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check-oci-ta:0.4@sha256:fe5e5ba3a72632cd505910de2eacd62c9d11ed570c325173188f8d568ac60771
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: sast-shell-check
      params:
      - name: image-digest
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-container.results.IMAGE_URL)
      - name: SOURCE_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
      - name: CACHI2_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)
      runAfter:
      - build-container
      taskRef:
        params:
        - name: name
          value: sast-shell-check-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-sast-shell-check-oci-ta:0.1@sha256:bf7bdde00b7212f730c1356672290af6f38d070da2c8a316987b5c32fd49e0b9
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: sast-unicode-check
      params:
      - name: image-digest
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-container.results.IMAGE_URL)
      - name: SOURCE_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
      - name: CACHI2_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)
      runAfter:
      - build-container
      taskRef:
        params:
        - name: name
          value: sast-unicode-check-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-sast-unicode-check-oci-ta:0.3@sha256:a2bde66f6b4164620298c7d709b8f08515409404000fa1dc2260d2508b135651
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: clamav-scan
      params:
      - name: image-digest
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-container.results.IMAGE_URL)
      runAfter:
      - build-container
      taskRef:
        params:
        - name: name
          value: clamav-scan
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-clamav-scan:0.3@sha256:b0bd59748cda4a7abf311e4f448e6c1d00c6b6d8c0ecc1c2eb33e08dc0e0b802
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    workspaces:
    - name: git-auth
      optional: true
  taskRunTemplate:
    serviceAccountName: build-pipeline-o11y
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
