evaluation_interval: 1m

rule_files:
  - prometheus.controller_alerts.yaml

tests:

  # Alerted test cases
  - interval: 1m
    input_series:
      # Controller with continuous errors greater than 10% so this is alerted
      - series: 'controller_runtime_reconcile_errors_total{controller="c1-controller", namespace="prod-ns1", pod="pod-1", container="c1", service="s1", source_cluster="cluster01"}'
        values: '1 2 3 4 5 6 7 8 9 10 11'
      - series: 'controller_runtime_reconcile_total{controller="c1-controller", namespace="prod-ns1", pod="pod-1", container="c1", service="s1", source_cluster="cluster01"}'
        values: '1 2 3 4 5 6 7 8 9 10 11'

    alert_rule_test:
      - eval_time: 11m
        alertname: ControllerReconciliationErrors
        exp_alerts:
          - exp_labels:
              severity: warning
              namespace: prod-ns1
              pod: pod-1
              controller: c1-controller
              container: c1
              service: s1
              source_cluster: cluster01
            exp_annotations:
              summary: >-
                Controller c1-controller has reconciliation errors greater than 10%
              description: >-
                Controller c1-controller with Pod pod-1 for namespace prod-ns1 on cluster
                cluster01 has total reconciliation errors greater than 10% compared to
                total reconciliations in last 10 minutes.
              runbook_url: https://gitlab.cee.redhat.com/rhtap/docs/sop/-/blob/main/o11y/alert-rule-controllerReconciliationErrors.md

  - interval: 1m
    input_series:
      # Controller without error at start and then error starts. This is alerted because there is always an increase in error value
      - series: 'controller_runtime_reconcile_errors_total{controller="c2-controller", namespace="prod-ns2", pod="pod-2", container="c2", service="s2", source_cluster="stone02"}'
        values: '0 1 2 2 2 3 4 5 6 7 8'
      - series: 'controller_runtime_reconcile_total{controller="c2-controller", namespace="prod-ns2", pod="pod-2", container="c2", service="s2", source_cluster="stone02"}'
        values: '1 2 3 4 5 6 7 8 9 10 11'

    alert_rule_test:
      - eval_time: 11m
        alertname: ControllerReconciliationErrors
        exp_alerts:
          - exp_labels:
              severity: warning
              namespace: prod-ns2
              pod: pod-2
              controller: c2-controller
              container: c2
              service: s2
              source_cluster: stone02
            exp_annotations:
              summary: >-
                Controller c2-controller has reconciliation errors greater than 10%
              description: >-
                Controller c2-controller with Pod pod-2 for namespace prod-ns2 on cluster
                stone02 has total reconciliation errors greater than 10% compared to total
                reconciliations in last 10 minutes.
              runbook_url: https://gitlab.cee.redhat.com/rhtap/docs/sop/-/blob/main/o11y/alert-rule-controllerReconciliationErrors.md

  - interval: 1m
    input_series:
      # Controller with large spikes in error values and pause in reconcile total,
      # since the error rate is always greater than 10% in 10min window this is alerted
      - series: 'controller_runtime_reconcile_errors_total{controller="c10-controller", namespace="prod-ns10", pod="pod-10", container="c10", service="s10", source_cluster="stone03"}'
        values: '1 150 390 390 390 390 390 390 390 390 590'
      - series: 'controller_runtime_reconcile_total{controller="c10-controller", namespace="prod-ns10", pod="pod-10", container="c10", service="s10", source_cluster="stone03"}'
        values: '1 500 740 840 940 1040 1140 1240 1340 1440 1540'

    alert_rule_test:
      - eval_time: 11m
        alertname: ControllerReconciliationErrors
        exp_alerts:
          - exp_labels:
              severity: warning
              namespace: prod-ns10
              pod: pod-10
              controller: c10-controller
              container: c10
              service: s10
              source_cluster: stone03
            exp_annotations:
              summary: >-
                Controller c10-controller has reconciliation errors greater than 10%
              description: >-
                Controller c10-controller with Pod pod-10 for namespace prod-ns10 on
                cluster stone03 has total reconciliation errors greater than 10% compared
                to total reconciliations in last 10 minutes.
              runbook_url: https://gitlab.cee.redhat.com/rhtap/docs/sop/-/blob/main/o11y/alert-rule-controllerReconciliationErrors.md

  # Not Alerted test cases
  - interval: 1m
    input_series:
      # Controller with no reconciliation events throughout the test time frame so this is not alerted
      - series: 'controller_runtime_reconcile_errors_total{controller="c5-controller", namespace="prod-ns5", pod="pod-5", container="c1", service="s1", source_cluster="cluster04"}'
        values: '1 1 1 1 1 1 1 1 1 1 1'
      - series: 'controller_runtime_reconcile_total{controller="c5-controller", namespace="prod-ns5", pod="pod-5", container="c1", service="s1", source_cluster="cluster04"}'
        values: '10 10 10 10 10 10 10 10 10 10 10'

      # Controller with errors during parts of the test period
      - series: 'controller_runtime_reconcile_errors_total{controller="c3-controller", namespace="prod-ns3", pod="pod-3", container="c1", service="s1", source_cluster="cluster05"}'
        values: '0 2 2 2 2 2 2 2 2 2 2'
      - series: 'controller_runtime_reconcile_total{controller="c3-controller", namespace="prod-ns3", pod="pod-3", container="c1", service="s1", source_cluster="cluster05"}'
        values: '1 3 3 5 5 6 7 8 9 10 20'

      # Controller with error throughout but their total sum is less than 10% of the total number of
      # reconciliation events at the test period so this is not alerted
      - series: 'controller_runtime_reconcile_errors_total{controller="c4-controller", namespace="prod-ns4", pod="pod-4", container="c1", service="s1", source_cluster="cluster06"}'
        values: '1 2 3 4 5 6 7 8 9 10 11'
      - series: 'controller_runtime_reconcile_total{controller="c4-controller", namespace="prod-ns4", pod="pod-4", container="c1", service="s1", source_cluster="cluster06"}'
        values: '1 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009'

      # Controller with error throughout but namespace starts with openshift so this is not alerted
      - series: 'controller_runtime_reconcile_errors_total{controller="c7-controller", namespace="openshift-ns", pod="pod-1", container="c1", service="s1", source_cluster="cluster07"}'
        values: '1 2 3 4 5 6 7 8 9 10 11'
      - series: 'controller_runtime_reconcile_total{controller="c7-controller", namespace="openshift-ns", pod="pod-1", container="c1", service="s1", source_cluster="cluster07"}'
        values: '1 2 3 4 5 6 7 8 9 10 11'

      # Controller with error throughout but namespace starts with kube so this is not alerted
      - series: 'controller_runtime_reconcile_errors_total{controller="c8-controller", namespace="kube-ns", pod="pod-1", container="c1", service="s1", source_cluster="cluster08"}'
        values: '1 2 3 4 5 6 7 8 9 10 11'
      - series: 'controller_runtime_reconcile_total{controller="c8-controller", namespace="kube-ns", pod="pod-1", container="c1", service="s1", source_cluster="cluster08"}'
        values: '1 2 3 4 5 6 7 8 9 10 11'

      # Controller with error throughout but namespace ends with tenant so this is not alerted
      - series: 'controller_runtime_reconcile_errors_total{controller="c9-controller", namespace="ns-tenant", pod="pod-1", container="c1", service="s1", source_cluster="cluster09"}'
        values: '1 2 3 4 5 6 7 8 9 10 11'
      - series: 'controller_runtime_reconcile_total{controller="c9-controller", namespace="ns-tenant", pod="pod-1", container="c1", service="s1", source_cluster="cluster09"}'
        values: '1 2 3 4 5 6 7 8 9 10 11'

      # Controller with error throughout but has default as namespace so this is not alerted
      - series: 'controller_runtime_reconcile_errors_total{controller="c0-controller", namespace="default", pod="pod-1", container="c1", service="s1", source_cluster="cluster10"}'
        values: '1 2 3 4 5 6 7 8 9 10 11'
      - series: 'controller_runtime_reconcile_total{controller="c0-controller", namespace="default", pod="pod-1", container="c1", service="s1", source_cluster="cluster10"}'
        values: '1 2 3 4 5 6 7 8 9 10 11'

    alert_rule_test:
      - eval_time: 11m
        alertname: ControllerReconciliationErrors
