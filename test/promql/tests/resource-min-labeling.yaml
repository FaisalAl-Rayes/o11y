evaluation_interval: 1m

rule_files:
  - ../extracted-rules.yaml

tests:
  # test merging containers and init containers resource limits to a single metric
  # augmented with pod labels.
  - interval: 1m
    input_series:
      - series: 'kube_pod_container_resource_limits{resource="memory", namespace="ns1", pod="ns1p1", container="ns1p1c1"}'
        values: '2x10'
      - series: 'kube_pod_init_container_resource_limits{resource="memory", namespace="ns1", pod="ns1p1", container="ns1p1c2"}'
        values: '2x10'
      - series: 'kube_pod_container_resource_limits{resource="cpu", namespace="ns1", pod="ns1p1", container="ns1p1c1"}'
        values: '0.5x10'
      - series: 'kube_pod_init_container_resource_limits{resource="cpu", namespace="ns1", pod="ns1p1", container="ns1p1c2"}'
        values: '0.5x10'
      - series: 'kube_pod_labels{label_pipelines_appstudio_openshift_io_type="t1", label_app_kubernetes_io_managed_by="tekton-pipelines", namespace="ns1", pod="ns1p1"}'
        values: '1x10'

      - series: 'kube_pod_container_resource_limits{resource="memory", namespace="ns1", pod="ns1p2", container="ns1p2c1"}'
        values: '5x10'
      - series: 'kube_pod_container_resource_limits{resource="cpu", namespace="ns1", pod="ns1p2", container="ns1p2c1"}'
        values: '1x10'
      - series: 'kube_pod_labels{namespace="ns1", pod="ns1p2"}'
        values: '1x10'

    promql_expr_test:
      # labeled containers and init containers for a specific namespace with specific pipeline type
      - expr: |
          appstudio_container_resource_limits{namespace="ns1", label_pipelines_appstudio_openshift_io_type="t1", label_app_kubernetes_io_managed_by="tekton-pipelines"}
        eval_time: 4m
        exp_samples:
          - labels: 'appstudio_container_resource_limits{resource="memory", namespace="ns1", pod="ns1p1", container="ns1p1c1", label_pipelines_appstudio_openshift_io_type="t1", label_app_kubernetes_io_managed_by="tekton-pipelines"}'
            value: 2
          - labels: 'appstudio_container_resource_limits{resource="memory", namespace="ns1", pod="ns1p1", container="ns1p1c2", label_pipelines_appstudio_openshift_io_type="t1", label_app_kubernetes_io_managed_by="tekton-pipelines"}'
            value: 2
          - labels: 'appstudio_container_resource_limits{resource="cpu", namespace="ns1", pod="ns1p1", container="ns1p1c1", label_pipelines_appstudio_openshift_io_type="t1", label_app_kubernetes_io_managed_by="tekton-pipelines"}'
            value: 0.5
          - labels: 'appstudio_container_resource_limits{resource="cpu", namespace="ns1", pod="ns1p1", container="ns1p1c2", label_pipelines_appstudio_openshift_io_type="t1", label_app_kubernetes_io_managed_by="tekton-pipelines"}'
            value: 0.5

      # labeled containers and init containers for a specific namespace without pipeline type
      - expr: |
          appstudio_container_resource_limits{namespace="ns1", label_pipelines_appstudio_openshift_io_type=""}
        eval_time: 4m
        exp_samples:
          - labels: 'appstudio_container_resource_limits{resource="memory", namespace="ns1", pod="ns1p2", container="ns1p2c1"}'
            value: 5
          - labels: 'appstudio_container_resource_limits{resource="cpu", namespace="ns1", pod="ns1p2", container="ns1p2c1"}'
            value: 1
